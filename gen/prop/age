#!/bin/sh

set -e
cd "${0%/*}/../.."
exec >lib/unicode/prop/uprop_get_age.c

gawk '
BEGIN {
	FS = " *(; *|#.*)"

	print "/* This file is autogenerated by gen/prop/age; DO NOT EDIT. */"
	print ""
	print "#include \"__bsearch.h\""
	print "#include \"rune.h\""
	print "#include \"unicode/prop.h\""
	print ""
}

/^[^#]/ {
	n = split($1, a, /\.\./)
	lo = strtonum("0X" a[1])
	hi = strtonum("0X" a[n])

	for (i = lo; i <= hi; i++) {
		gsub(/^; /, "", $2)
		props[i] = "AGE_V" int($2) "_" ($2 % 1 * 10)
	}
}

END {
	print "static const struct {"
	print "\trune lo, hi;"
	print "\tenum uprop_age val;"
	print "} lookup[] = {"

	for (i = 0x1F6; i <= 0x10FFFF; i++) {
		if (!props[i])
			continue
		lo = i
		while (props[lo] == props[i + 1])
			i++
		printf "\t{RUNE_C(0x%06X), RUNE_C(0x%06X), %s},\n", lo, i, props[i]
	}

	print "};"
	print ""
	print "__MLIB_DEFINE_BSEARCH(enum uprop_age, lookup, AGE_NA)"
	print ""
	print "enum uprop_age"
	print "uprop_get_age(rune ch)"
	print "{"
	print "\treturn ch <= RUNE_C(0x01F5) ? AGE_V1_1 : mlib_lookup(ch);"
	print "}"
}
' data/DerivedAge | sed 's/\s*$//'
