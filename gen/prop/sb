#!/bin/sh

set -e
cd "${0%/*}/../.."
exec >lib/unicode/prop/uprop_get_sb.c

gawk '
BEGIN {
	FS = " *(; *|#.*)"

	map["ATerm"]     = "AT"
	map["Close"]     = "CL"
	map["CR"]        = "CR"
	map["Extend"]    = "EX"
	map["Format"]    = "FO"
	map["LF"]        = "LF"
	map["Lower"]     = "LO"
	map["Numeric"]   = "NU"
	map["OLetter"]   = "LE"
	map["Other"]     = "XX"
	map["SContinue"] = "SC"
	map["Sep"]       = "SE"
	map["Sp"]        = "SP"
	map["STerm"]     = "ST"
	map["Upper"]     = "UP"

	print "/* This file is autogenerated by gen/prop/sb; DO NOT EDIT. */"
	print ""
	print "#include \"_bsearch.h\""
	print "#include \"macros.h\""
	print "#include \"rune.h\""
	print "#include \"unicode/prop.h\""
	print ""
}

/^[A-F0-9]/ {
	n = split($1, a, /\.\./)
	lo = strtonum("0X" a[1])
	hi = strtonum("0X" a[n])

	for (i = lo; i <= hi; i++)
		props[i] = "SB_" map[$2]
}

END {
	print "static constexpr enum uprop_sb lookup_lat1[] = {"
	for (i = 0; i < 0x100; i++) {
		if (i % 8 == 0)
			printf "\t"
		printf "%s%s", (props[i] ? props[i] : "SB_XX") ",", \
			i % 8 == 7 ? "\n" : " "
	}
	print "};"
	print ""
	print "static const struct {"
	print "\trune lo, hi;"
	print "\tenum uprop_sb val;"
	print "} lookup[] = {"

	for (i = 0x100; i <= 0x10FFFF; i++) {
		if (!props[i])
			continue
		for (lo = i; props[lo] == props[i + 1]; i++)
			;
		printf "\t{RUNE_C(0x%06X), RUNE_C(0x%06X), %s},\n", lo, i, props[i]
	}

	print "};"
	print ""
	print "_MLIB_DEFINE_BSEARCH(enum uprop_sb, lookup, SB_XX)"
	print ""
	print "enum uprop_sb"
	print "uprop_get_sb(rune ch)"
	print "{"
	print "\treturn ch < lengthof(lookup_lat1) ? lookup_lat1[ch] : mlib_lookup(ch);"
	print "}"
}
' data/SentenceBreakProperty | sed 's/\s*$//'
